<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Test</title>
    <link href="/2022/03/19/test/"/>
    <url>/2022/03/19/test/</url>
    
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2e6</span>;<br><span class="hljs-type">int</span> mk[N+<span class="hljs-number">7</span>],pri[N+<span class="hljs-number">7</span>];<br><span class="hljs-type">int</span> pn=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> phi[N+<span class="hljs-number">7</span>],mob[N+<span class="hljs-number">7</span>];<br><span class="hljs-type">int</span> smu[N+<span class="hljs-number">7</span>];ll pre[N+<span class="hljs-number">7</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">lins</span><span class="hljs-params">()</span></span>&#123;<br>mk[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>mob[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>phi[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=N;i++)&#123;<br><span class="hljs-keyword">if</span>(!mk[i])&#123;<br>pri[++pn]=i;<br>phi[i]=i<span class="hljs-number">-1</span>;<br>mob[i]=<span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=pn &amp;&amp; i*pri[j]&lt;=N;j++)&#123;<br>mk[i*pri[j]]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(i%pri[j]==<span class="hljs-number">0</span>)&#123;<br>phi[i*pri[j]]=phi[i]*(pri[j]<span class="hljs-number">-0</span>);<br>mob[i*pri[j]]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>phi[i*pri[j]]=phi[i]*(pri[j]<span class="hljs-number">-1</span>);<br>mob[i*pri[j]]=-mob[i];<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-built_in">lins</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=N;i++)&#123;<br>pre[i]=pre[i<span class="hljs-number">-1</span>]+phi[i];<br><span class="hljs-comment">// printf(&quot;%lld%c&quot;,phi[i],&quot; \n&quot;[i==N]);</span><br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><br><span class="hljs-built_in">init</span>();<br><br><span class="hljs-type">int</span> n;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>ll ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> d=<span class="hljs-number">1</span>;d&lt;=n;d++)&#123;<br>ans+=d*(pre[n/d]<span class="hljs-number">-1</span>);<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans);<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>$1+1&#x3D;2$</p><p>$$<br>\sum_{d|n}\mu(d)&#x3D;[n&#x3D;1]<br>$$</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
